"""Added tables for wireless, security, mac_acls

Revision ID: 6955005afca4
Revises: 1a71d90a35d5
Create Date: 2024-06-29 19:33:09.451444

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6955005afca4"
down_revision: Union[str, None] = "1a71d90a35d5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mac_acls",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("macs", sa.PickleType(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "security",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "wireless_security_type",
            sa.Enum(
                "NO_PROTECTION",
                "WEP",
                "WPA_PSK",
                "WPA_ENTERPRISE",
                "WPA2_PSK",
                "WPA2_ENTERPRISE",
                "WPA3_PSK",
                "WPA3_ENTERPRISE",
                name="wirelesssecuritytype",
            ),
            nullable=False,
        ),
        sa.Column("radius", sa.String(), nullable=True),
        sa.Column("eap", sa.Boolean(), nullable=False),
        sa.Column(
            "mac_acl_type",
            sa.Enum("OFF", "DENY", "PERMIT", name="acltype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "wireless",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("vht", sa.Boolean(), nullable=False),
        sa.Column("acs", sa.Boolean(), nullable=False),
        sa.Column("beacon_interval", sa.Integer(), nullable=False),
        sa.Column("rts_cts_threshold", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "network_security_connectors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("network_id", sa.Integer(), nullable=False),
        sa.Column("security_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["network_id"],
            ["networks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["security_id"],
            ["security.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "network_wireless_connectors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("network_id", sa.Integer(), nullable=False),
        sa.Column("wireless_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["network_id"],
            ["networks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["wireless_id"],
            ["wireless.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "security_mac_acl_connectors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("security_id", sa.Integer(), nullable=False),
        sa.Column("mac_acl_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["mac_acl_id"],
            ["mac_acls.id"],
        ),
        sa.ForeignKeyConstraint(
            ["security_id"],
            ["security.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("security_mac_acl_connectors")
    op.drop_table("network_wireless_connectors")
    op.drop_table("network_security_connectors")
    op.drop_table("wireless")
    op.drop_table("security")
    op.drop_table("mac_acls")
    # ### end Alembic commands ###
